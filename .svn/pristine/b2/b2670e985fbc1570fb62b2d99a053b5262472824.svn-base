using Axede.BussinesObject.Application;
using Axede.Utilidades;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using Axede.Utilidades.Enums;
using Axede.Mensajes;


namespace Axede.Model.SoftPhone
{
    public partial class Model : IModel
    {
        public ResultadoOperacion ObtenerListaContactos(Contactos oContacto)
        {
            ResultadoOperacion oResultadoOperacion = new ResultadoOperacion();
            List<DtoContactos> lstContacto = new List<DtoContactos>();
            DtoUserInfo oUserInfo = new DtoUserInfo();
            oUserInfo = ObtenerUserInfo();

            if (oUserInfo != null)
            {
                oContacto.Ide_User = oUserInfo.Ide_User;
            }

            try
            {
                lstContacto = oCommonDao.ObtenerContactos(oContacto.Ide_User, oContacto.Nom_Name);
            }
            catch (Exception)
            {
                oResultadoOperacion.oEstado = TipoRespuesta.Error;
                string sMensaje = AdministradorMensaje.Instance.GetMensajePorCodigo(Mensajes.CodigoMensaje.General_ErrorConsultandoBaseDatos);
                oResultadoOperacion.Mensaje = sMensaje;
                return oResultadoOperacion;
            }

            oResultadoOperacion.ListaEntidadDatos = lstContacto;

            return oResultadoOperacion;
        }

        public ResultadoOperacion InsertarContacto(Contactos oContacto)
        {
            ResultadoOperacion oResultadoOperacion = new ResultadoOperacion();
            DtoUserInfo oUserInfo = new DtoUserInfo();
            oUserInfo = ObtenerUserInfo();

            if (oUserInfo != null)
            {
                oContacto.Ide_User = oUserInfo.Ide_User;
            }

            if (oContacto.Num_Extension == null)
            {
                oContacto.Num_Extension = string.Empty;
            }
            try
            {
                oCommonDao.InsContactos(oContacto);
            }
            catch (Exception ex)
            {
                oResultadoOperacion.oEstado = TipoRespuesta.Error;
                oResultadoOperacion.Mensaje = ex.Message;
                return oResultadoOperacion;
            }

            oResultadoOperacion.oEstado = TipoRespuesta.Exito;
            return oResultadoOperacion;
        }

        public ResultadoOperacion ModificarContacto(Contactos oContacto)
        {
            ResultadoOperacion oResultadoOperacion = new ResultadoOperacion();
            DtoUserInfo oUserInfo = new DtoUserInfo();
            oUserInfo = ObtenerUserInfo();

            if (oUserInfo != null)
            {
                oContacto.Ide_User = oUserInfo.Ide_User;
            }

            if (oContacto.Num_Extension == null)
            {
                oContacto.Num_Extension = string.Empty;
            }
            try
            {
                oCommonDao.UpdContactos(oContacto);
            }
            catch (Exception ex)
            {
                oResultadoOperacion.oEstado = TipoRespuesta.Error;
                oResultadoOperacion.Mensaje = ex.Message;
                return oResultadoOperacion;
            }

            oResultadoOperacion.oEstado = TipoRespuesta.Exito;
            return oResultadoOperacion;
        }

        private DtoUserInfo ObtenerUserInfo()
        {
            DtoUserInfo oUserInfo = new DtoUserInfo();
            string sExt = General.sUserName;
            try
            {
                oUserInfo = oCommonDao.ObtenerInfoUser(sExt);
            }
            catch (Exception ex)
            {                
                throw ex;
            }

            return oUserInfo;
        }

    }
}
