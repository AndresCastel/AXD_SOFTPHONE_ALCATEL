//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.18052
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// Microsoft.VSDesigner generó automáticamente este código fuente, versión=4.0.30319.18052.
// 
#pragma warning disable 1591

namespace Axede.ProxyService.XMLMessagingService_OTUC5 {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="XmlMessagingSoapBinding", Namespace="http://xmlapi.alcatel.com/messaging")]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(IMDestination))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(IMMsgHeader))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(IMMsgSortingField))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(IMSendResultItem))]
    public partial class XmlMessagingService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback loginOperationCompleted;
        
        private System.Threading.SendOrPostCallback logoutOperationCompleted;
        
        private System.Threading.SendOrPostCallback dialOperationCompleted;
        
        private System.Threading.SendOrPostCallback pauseOperationCompleted;
        
        private System.Threading.SendOrPostCallback recordOperationCompleted;
        
        private System.Threading.SendOrPostCallback forwardOperationCompleted;
        
        private System.Threading.SendOrPostCallback hangupOperationCompleted;
        
        private System.Threading.SendOrPostCallback loadMessagesOperationCompleted;
        
        private System.Threading.SendOrPostCallback getCountersOperationCompleted;
        
        private System.Threading.SendOrPostCallback setOrderOperationCompleted;
        
        private System.Threading.SendOrPostCallback getMessagesOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteMessagesOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteAllMessagesOperationCompleted;
        
        private System.Threading.SendOrPostCallback getMessageUrlOperationCompleted;
        
        private System.Threading.SendOrPostCallback getDraftUrlOperationCompleted;
        
        private System.Threading.SendOrPostCallback appendOperationCompleted;
        
        private System.Threading.SendOrPostCallback stopOperationCompleted;
        
        private System.Threading.SendOrPostCallback setFilterOperationCompleted;
        
        private System.Threading.SendOrPostCallback getCapabilitiesOperationCompleted;
        
        private System.Threading.SendOrPostCallback cancelOperationCompleted;
        
        private System.Threading.SendOrPostCallback getIndexOfOperationCompleted;
        
        private System.Threading.SendOrPostCallback abortOperationCompleted;
        
        private System.Threading.SendOrPostCallback getStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback callbackOperationCompleted;
        
        private System.Threading.SendOrPostCallback playOperationCompleted;
        
        private System.Threading.SendOrPostCallback sendOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public XmlMessagingService() {
            this.Url = global::Axede.ProxyService.Properties.Settings.Default.Axede_ProxyService_XMLMessagingService_OTUC5_XmlMessagingService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event loginCompletedEventHandler loginCompleted;
        
        /// <remarks/>
        public event logoutCompletedEventHandler logoutCompleted;
        
        /// <remarks/>
        public event dialCompletedEventHandler dialCompleted;
        
        /// <remarks/>
        public event pauseCompletedEventHandler pauseCompleted;
        
        /// <remarks/>
        public event recordCompletedEventHandler recordCompleted;
        
        /// <remarks/>
        public event forwardCompletedEventHandler forwardCompleted;
        
        /// <remarks/>
        public event hangupCompletedEventHandler hangupCompleted;
        
        /// <remarks/>
        public event loadMessagesCompletedEventHandler loadMessagesCompleted;
        
        /// <remarks/>
        public event getCountersCompletedEventHandler getCountersCompleted;
        
        /// <remarks/>
        public event setOrderCompletedEventHandler setOrderCompleted;
        
        /// <remarks/>
        public event getMessagesCompletedEventHandler getMessagesCompleted;
        
        /// <remarks/>
        public event deleteMessagesCompletedEventHandler deleteMessagesCompleted;
        
        /// <remarks/>
        public event deleteAllMessagesCompletedEventHandler deleteAllMessagesCompleted;
        
        /// <remarks/>
        public event getMessageUrlCompletedEventHandler getMessageUrlCompleted;
        
        /// <remarks/>
        public event getDraftUrlCompletedEventHandler getDraftUrlCompleted;
        
        /// <remarks/>
        public event appendCompletedEventHandler appendCompleted;
        
        /// <remarks/>
        public event stopCompletedEventHandler stopCompleted;
        
        /// <remarks/>
        public event setFilterCompletedEventHandler setFilterCompleted;
        
        /// <remarks/>
        public event getCapabilitiesCompletedEventHandler getCapabilitiesCompleted;
        
        /// <remarks/>
        public event cancelCompletedEventHandler cancelCompleted;
        
        /// <remarks/>
        public event getIndexOfCompletedEventHandler getIndexOfCompleted;
        
        /// <remarks/>
        public event abortCompletedEventHandler abortCompleted;
        
        /// <remarks/>
        public event getStatusCompletedEventHandler getStatusCompleted;
        
        /// <remarks/>
        public event callbackCompletedEventHandler callbackCompleted;
        
        /// <remarks/>
        public event playCompletedEventHandler playCompleted;
        
        /// <remarks/>
        public event sendCompletedEventHandler sendCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("login", RequestNamespace="http://xmlapi.alcatel.com/messaging", ResponseNamespace="http://xmlapi.alcatel.com/messaging")]
        [return: System.Xml.Serialization.SoapElementAttribute("loginReturn")]
        public AlcSessionResult login(string pFwSessionId, string pVoiceMailPassword, string pPhoneNumber) {
            object[] results = this.Invoke("login", new object[] {
                        pFwSessionId,
                        pVoiceMailPassword,
                        pPhoneNumber});
            return ((AlcSessionResult)(results[0]));
        }
        
        /// <remarks/>
        public void loginAsync(string pFwSessionId, string pVoiceMailPassword, string pPhoneNumber) {
            this.loginAsync(pFwSessionId, pVoiceMailPassword, pPhoneNumber, null);
        }
        
        /// <remarks/>
        public void loginAsync(string pFwSessionId, string pVoiceMailPassword, string pPhoneNumber, object userState) {
            if ((this.loginOperationCompleted == null)) {
                this.loginOperationCompleted = new System.Threading.SendOrPostCallback(this.OnloginOperationCompleted);
            }
            this.InvokeAsync("login", new object[] {
                        pFwSessionId,
                        pVoiceMailPassword,
                        pPhoneNumber}, this.loginOperationCompleted, userState);
        }
        
        private void OnloginOperationCompleted(object arg) {
            if ((this.loginCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.loginCompleted(this, new loginCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("logout", RequestNamespace="http://xmlapi.alcatel.com/messaging", ResponseNamespace="http://xmlapi.alcatel.com/messaging")]
        public void logout(string pFwSessionId, string pSvcSessionId) {
            this.Invoke("logout", new object[] {
                        pFwSessionId,
                        pSvcSessionId});
        }
        
        /// <remarks/>
        public void logoutAsync(string pFwSessionId, string pSvcSessionId) {
            this.logoutAsync(pFwSessionId, pSvcSessionId, null);
        }
        
        /// <remarks/>
        public void logoutAsync(string pFwSessionId, string pSvcSessionId, object userState) {
            if ((this.logoutOperationCompleted == null)) {
                this.logoutOperationCompleted = new System.Threading.SendOrPostCallback(this.OnlogoutOperationCompleted);
            }
            this.InvokeAsync("logout", new object[] {
                        pFwSessionId,
                        pSvcSessionId}, this.logoutOperationCompleted, userState);
        }
        
        private void OnlogoutOperationCompleted(object arg) {
            if ((this.logoutCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.logoutCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("dial", RequestNamespace="http://xmlapi.alcatel.com/messaging", ResponseNamespace="http://xmlapi.alcatel.com/messaging")]
        [return: System.Xml.Serialization.SoapElementAttribute("dialReturn")]
        public IMResult dial(string pFwSessionId, string pSvcSessionId, string pPhoneNumber, bool pBlocking) {
            object[] results = this.Invoke("dial", new object[] {
                        pFwSessionId,
                        pSvcSessionId,
                        pPhoneNumber,
                        pBlocking});
            return ((IMResult)(results[0]));
        }
        
        /// <remarks/>
        public void dialAsync(string pFwSessionId, string pSvcSessionId, string pPhoneNumber, bool pBlocking) {
            this.dialAsync(pFwSessionId, pSvcSessionId, pPhoneNumber, pBlocking, null);
        }
        
        /// <remarks/>
        public void dialAsync(string pFwSessionId, string pSvcSessionId, string pPhoneNumber, bool pBlocking, object userState) {
            if ((this.dialOperationCompleted == null)) {
                this.dialOperationCompleted = new System.Threading.SendOrPostCallback(this.OndialOperationCompleted);
            }
            this.InvokeAsync("dial", new object[] {
                        pFwSessionId,
                        pSvcSessionId,
                        pPhoneNumber,
                        pBlocking}, this.dialOperationCompleted, userState);
        }
        
        private void OndialOperationCompleted(object arg) {
            if ((this.dialCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.dialCompleted(this, new dialCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("pause", RequestNamespace="http://xmlapi.alcatel.com/messaging", ResponseNamespace="http://xmlapi.alcatel.com/messaging")]
        [return: System.Xml.Serialization.SoapElementAttribute("pauseReturn")]
        public IMPauseResult pause(string pFwSessionId, string pSvcSessionId) {
            object[] results = this.Invoke("pause", new object[] {
                        pFwSessionId,
                        pSvcSessionId});
            return ((IMPauseResult)(results[0]));
        }
        
        /// <remarks/>
        public void pauseAsync(string pFwSessionId, string pSvcSessionId) {
            this.pauseAsync(pFwSessionId, pSvcSessionId, null);
        }
        
        /// <remarks/>
        public void pauseAsync(string pFwSessionId, string pSvcSessionId, object userState) {
            if ((this.pauseOperationCompleted == null)) {
                this.pauseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnpauseOperationCompleted);
            }
            this.InvokeAsync("pause", new object[] {
                        pFwSessionId,
                        pSvcSessionId}, this.pauseOperationCompleted, userState);
        }
        
        private void OnpauseOperationCompleted(object arg) {
            if ((this.pauseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.pauseCompleted(this, new pauseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("record", RequestNamespace="http://xmlapi.alcatel.com/messaging", ResponseNamespace="http://xmlapi.alcatel.com/messaging")]
        [return: System.Xml.Serialization.SoapElementAttribute("recordReturn")]
        public IMResult record(string pFwSessionId, string pSvcSessionId, string pPhoneNumber) {
            object[] results = this.Invoke("record", new object[] {
                        pFwSessionId,
                        pSvcSessionId,
                        pPhoneNumber});
            return ((IMResult)(results[0]));
        }
        
        /// <remarks/>
        public void recordAsync(string pFwSessionId, string pSvcSessionId, string pPhoneNumber) {
            this.recordAsync(pFwSessionId, pSvcSessionId, pPhoneNumber, null);
        }
        
        /// <remarks/>
        public void recordAsync(string pFwSessionId, string pSvcSessionId, string pPhoneNumber, object userState) {
            if ((this.recordOperationCompleted == null)) {
                this.recordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnrecordOperationCompleted);
            }
            this.InvokeAsync("record", new object[] {
                        pFwSessionId,
                        pSvcSessionId,
                        pPhoneNumber}, this.recordOperationCompleted, userState);
        }
        
        private void OnrecordOperationCompleted(object arg) {
            if ((this.recordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.recordCompleted(this, new recordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("forward", RequestNamespace="http://xmlapi.alcatel.com/messaging", ResponseNamespace="http://xmlapi.alcatel.com/messaging")]
        [return: System.Xml.Serialization.SoapElementAttribute("forwardReturn")]
        public IMResult forward(string pFwSessionId, string pSvcSessionId, string pPhoneNumber, string pMessageId) {
            object[] results = this.Invoke("forward", new object[] {
                        pFwSessionId,
                        pSvcSessionId,
                        pPhoneNumber,
                        pMessageId});
            return ((IMResult)(results[0]));
        }
        
        /// <remarks/>
        public void forwardAsync(string pFwSessionId, string pSvcSessionId, string pPhoneNumber, string pMessageId) {
            this.forwardAsync(pFwSessionId, pSvcSessionId, pPhoneNumber, pMessageId, null);
        }
        
        /// <remarks/>
        public void forwardAsync(string pFwSessionId, string pSvcSessionId, string pPhoneNumber, string pMessageId, object userState) {
            if ((this.forwardOperationCompleted == null)) {
                this.forwardOperationCompleted = new System.Threading.SendOrPostCallback(this.OnforwardOperationCompleted);
            }
            this.InvokeAsync("forward", new object[] {
                        pFwSessionId,
                        pSvcSessionId,
                        pPhoneNumber,
                        pMessageId}, this.forwardOperationCompleted, userState);
        }
        
        private void OnforwardOperationCompleted(object arg) {
            if ((this.forwardCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.forwardCompleted(this, new forwardCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("hangup", RequestNamespace="http://xmlapi.alcatel.com/messaging", ResponseNamespace="http://xmlapi.alcatel.com/messaging")]
        [return: System.Xml.Serialization.SoapElementAttribute("hangupReturn")]
        public IMResult hangup(string pFwSessionId, string pSvcSessionId) {
            object[] results = this.Invoke("hangup", new object[] {
                        pFwSessionId,
                        pSvcSessionId});
            return ((IMResult)(results[0]));
        }
        
        /// <remarks/>
        public void hangupAsync(string pFwSessionId, string pSvcSessionId) {
            this.hangupAsync(pFwSessionId, pSvcSessionId, null);
        }
        
        /// <remarks/>
        public void hangupAsync(string pFwSessionId, string pSvcSessionId, object userState) {
            if ((this.hangupOperationCompleted == null)) {
                this.hangupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnhangupOperationCompleted);
            }
            this.InvokeAsync("hangup", new object[] {
                        pFwSessionId,
                        pSvcSessionId}, this.hangupOperationCompleted, userState);
        }
        
        private void OnhangupOperationCompleted(object arg) {
            if ((this.hangupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.hangupCompleted(this, new hangupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("loadMessages", RequestNamespace="http://xmlapi.alcatel.com/messaging", ResponseNamespace="http://xmlapi.alcatel.com/messaging")]
        [return: System.Xml.Serialization.SoapElementAttribute("loadMessagesReturn")]
        public IMMsgCounters loadMessages(string pFwSessionId, string pSvcSessionId, IMMsgType[] pFilters) {
            object[] results = this.Invoke("loadMessages", new object[] {
                        pFwSessionId,
                        pSvcSessionId,
                        pFilters});
            return ((IMMsgCounters)(results[0]));
        }
        
        /// <remarks/>
        public void loadMessagesAsync(string pFwSessionId, string pSvcSessionId, IMMsgType[] pFilters) {
            this.loadMessagesAsync(pFwSessionId, pSvcSessionId, pFilters, null);
        }
        
        /// <remarks/>
        public void loadMessagesAsync(string pFwSessionId, string pSvcSessionId, IMMsgType[] pFilters, object userState) {
            if ((this.loadMessagesOperationCompleted == null)) {
                this.loadMessagesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnloadMessagesOperationCompleted);
            }
            this.InvokeAsync("loadMessages", new object[] {
                        pFwSessionId,
                        pSvcSessionId,
                        pFilters}, this.loadMessagesOperationCompleted, userState);
        }
        
        private void OnloadMessagesOperationCompleted(object arg) {
            if ((this.loadMessagesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.loadMessagesCompleted(this, new loadMessagesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("getCounters", RequestNamespace="http://xmlapi.alcatel.com/messaging", ResponseNamespace="http://xmlapi.alcatel.com/messaging")]
        [return: System.Xml.Serialization.SoapElementAttribute("getCountersReturn")]
        public IMMsgCounters getCounters(string pFwSessionId, string pSvcSessionId) {
            object[] results = this.Invoke("getCounters", new object[] {
                        pFwSessionId,
                        pSvcSessionId});
            return ((IMMsgCounters)(results[0]));
        }
        
        /// <remarks/>
        public void getCountersAsync(string pFwSessionId, string pSvcSessionId) {
            this.getCountersAsync(pFwSessionId, pSvcSessionId, null);
        }
        
        /// <remarks/>
        public void getCountersAsync(string pFwSessionId, string pSvcSessionId, object userState) {
            if ((this.getCountersOperationCompleted == null)) {
                this.getCountersOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetCountersOperationCompleted);
            }
            this.InvokeAsync("getCounters", new object[] {
                        pFwSessionId,
                        pSvcSessionId}, this.getCountersOperationCompleted, userState);
        }
        
        private void OngetCountersOperationCompleted(object arg) {
            if ((this.getCountersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getCountersCompleted(this, new getCountersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("setOrder", RequestNamespace="http://xmlapi.alcatel.com/messaging", ResponseNamespace="http://xmlapi.alcatel.com/messaging")]
        public void setOrder(string pFwSessionId, string pSvcSessionId, IMMsgSortingField[] pSortingFields) {
            this.Invoke("setOrder", new object[] {
                        pFwSessionId,
                        pSvcSessionId,
                        pSortingFields});
        }
        
        /// <remarks/>
        public void setOrderAsync(string pFwSessionId, string pSvcSessionId, IMMsgSortingField[] pSortingFields) {
            this.setOrderAsync(pFwSessionId, pSvcSessionId, pSortingFields, null);
        }
        
        /// <remarks/>
        public void setOrderAsync(string pFwSessionId, string pSvcSessionId, IMMsgSortingField[] pSortingFields, object userState) {
            if ((this.setOrderOperationCompleted == null)) {
                this.setOrderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetOrderOperationCompleted);
            }
            this.InvokeAsync("setOrder", new object[] {
                        pFwSessionId,
                        pSvcSessionId,
                        pSortingFields}, this.setOrderOperationCompleted, userState);
        }
        
        private void OnsetOrderOperationCompleted(object arg) {
            if ((this.setOrderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setOrderCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("getMessages", RequestNamespace="http://xmlapi.alcatel.com/messaging", ResponseNamespace="http://xmlapi.alcatel.com/messaging")]
        [return: System.Xml.Serialization.SoapElementAttribute("getMessagesReturn")]
        public IMMsgHeader[] getMessages(string pFwSessionId, string pSvcSessionId, int pIndex, int pNbItems) {
            object[] results = this.Invoke("getMessages", new object[] {
                        pFwSessionId,
                        pSvcSessionId,
                        pIndex,
                        pNbItems});
            return ((IMMsgHeader[])(results[0]));
        }
        
        /// <remarks/>
        public void getMessagesAsync(string pFwSessionId, string pSvcSessionId, int pIndex, int pNbItems) {
            this.getMessagesAsync(pFwSessionId, pSvcSessionId, pIndex, pNbItems, null);
        }
        
        /// <remarks/>
        public void getMessagesAsync(string pFwSessionId, string pSvcSessionId, int pIndex, int pNbItems, object userState) {
            if ((this.getMessagesOperationCompleted == null)) {
                this.getMessagesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetMessagesOperationCompleted);
            }
            this.InvokeAsync("getMessages", new object[] {
                        pFwSessionId,
                        pSvcSessionId,
                        pIndex,
                        pNbItems}, this.getMessagesOperationCompleted, userState);
        }
        
        private void OngetMessagesOperationCompleted(object arg) {
            if ((this.getMessagesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getMessagesCompleted(this, new getMessagesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("deleteMessages", RequestNamespace="http://xmlapi.alcatel.com/messaging", ResponseNamespace="http://xmlapi.alcatel.com/messaging")]
        public void deleteMessages(string pFwSessionId, string pSvcSessionId, string[] pMessageIdList) {
            this.Invoke("deleteMessages", new object[] {
                        pFwSessionId,
                        pSvcSessionId,
                        pMessageIdList});
        }
        
        /// <remarks/>
        public void deleteMessagesAsync(string pFwSessionId, string pSvcSessionId, string[] pMessageIdList) {
            this.deleteMessagesAsync(pFwSessionId, pSvcSessionId, pMessageIdList, null);
        }
        
        /// <remarks/>
        public void deleteMessagesAsync(string pFwSessionId, string pSvcSessionId, string[] pMessageIdList, object userState) {
            if ((this.deleteMessagesOperationCompleted == null)) {
                this.deleteMessagesOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteMessagesOperationCompleted);
            }
            this.InvokeAsync("deleteMessages", new object[] {
                        pFwSessionId,
                        pSvcSessionId,
                        pMessageIdList}, this.deleteMessagesOperationCompleted, userState);
        }
        
        private void OndeleteMessagesOperationCompleted(object arg) {
            if ((this.deleteMessagesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteMessagesCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("deleteAllMessages", RequestNamespace="http://xmlapi.alcatel.com/messaging", ResponseNamespace="http://xmlapi.alcatel.com/messaging")]
        public void deleteAllMessages(string pFwSessionId, string pSvcSessionId) {
            this.Invoke("deleteAllMessages", new object[] {
                        pFwSessionId,
                        pSvcSessionId});
        }
        
        /// <remarks/>
        public void deleteAllMessagesAsync(string pFwSessionId, string pSvcSessionId) {
            this.deleteAllMessagesAsync(pFwSessionId, pSvcSessionId, null);
        }
        
        /// <remarks/>
        public void deleteAllMessagesAsync(string pFwSessionId, string pSvcSessionId, object userState) {
            if ((this.deleteAllMessagesOperationCompleted == null)) {
                this.deleteAllMessagesOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteAllMessagesOperationCompleted);
            }
            this.InvokeAsync("deleteAllMessages", new object[] {
                        pFwSessionId,
                        pSvcSessionId}, this.deleteAllMessagesOperationCompleted, userState);
        }
        
        private void OndeleteAllMessagesOperationCompleted(object arg) {
            if ((this.deleteAllMessagesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteAllMessagesCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("getMessageUrl", RequestNamespace="http://xmlapi.alcatel.com/messaging", ResponseNamespace="http://xmlapi.alcatel.com/messaging")]
        [return: System.Xml.Serialization.SoapElementAttribute("getMessageUrlReturn")]
        public string[] getMessageUrl(string pFwSessionId, string pSvcSessionId, string pMessageId) {
            object[] results = this.Invoke("getMessageUrl", new object[] {
                        pFwSessionId,
                        pSvcSessionId,
                        pMessageId});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void getMessageUrlAsync(string pFwSessionId, string pSvcSessionId, string pMessageId) {
            this.getMessageUrlAsync(pFwSessionId, pSvcSessionId, pMessageId, null);
        }
        
        /// <remarks/>
        public void getMessageUrlAsync(string pFwSessionId, string pSvcSessionId, string pMessageId, object userState) {
            if ((this.getMessageUrlOperationCompleted == null)) {
                this.getMessageUrlOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetMessageUrlOperationCompleted);
            }
            this.InvokeAsync("getMessageUrl", new object[] {
                        pFwSessionId,
                        pSvcSessionId,
                        pMessageId}, this.getMessageUrlOperationCompleted, userState);
        }
        
        private void OngetMessageUrlOperationCompleted(object arg) {
            if ((this.getMessageUrlCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getMessageUrlCompleted(this, new getMessageUrlCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("getDraftUrl", RequestNamespace="http://xmlapi.alcatel.com/messaging", ResponseNamespace="http://xmlapi.alcatel.com/messaging")]
        [return: System.Xml.Serialization.SoapElementAttribute("getDraftUrlReturn")]
        public IMGetResult getDraftUrl(string pFwSessionId, string pSvcSessionId) {
            object[] results = this.Invoke("getDraftUrl", new object[] {
                        pFwSessionId,
                        pSvcSessionId});
            return ((IMGetResult)(results[0]));
        }
        
        /// <remarks/>
        public void getDraftUrlAsync(string pFwSessionId, string pSvcSessionId) {
            this.getDraftUrlAsync(pFwSessionId, pSvcSessionId, null);
        }
        
        /// <remarks/>
        public void getDraftUrlAsync(string pFwSessionId, string pSvcSessionId, object userState) {
            if ((this.getDraftUrlOperationCompleted == null)) {
                this.getDraftUrlOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetDraftUrlOperationCompleted);
            }
            this.InvokeAsync("getDraftUrl", new object[] {
                        pFwSessionId,
                        pSvcSessionId}, this.getDraftUrlOperationCompleted, userState);
        }
        
        private void OngetDraftUrlOperationCompleted(object arg) {
            if ((this.getDraftUrlCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getDraftUrlCompleted(this, new getDraftUrlCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("append", RequestNamespace="http://xmlapi.alcatel.com/messaging", ResponseNamespace="http://xmlapi.alcatel.com/messaging")]
        [return: System.Xml.Serialization.SoapElementAttribute("appendReturn")]
        public IMResult append(string pFwSessionId, string pSvcSessionId) {
            object[] results = this.Invoke("append", new object[] {
                        pFwSessionId,
                        pSvcSessionId});
            return ((IMResult)(results[0]));
        }
        
        /// <remarks/>
        public void appendAsync(string pFwSessionId, string pSvcSessionId) {
            this.appendAsync(pFwSessionId, pSvcSessionId, null);
        }
        
        /// <remarks/>
        public void appendAsync(string pFwSessionId, string pSvcSessionId, object userState) {
            if ((this.appendOperationCompleted == null)) {
                this.appendOperationCompleted = new System.Threading.SendOrPostCallback(this.OnappendOperationCompleted);
            }
            this.InvokeAsync("append", new object[] {
                        pFwSessionId,
                        pSvcSessionId}, this.appendOperationCompleted, userState);
        }
        
        private void OnappendOperationCompleted(object arg) {
            if ((this.appendCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.appendCompleted(this, new appendCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("stop", RequestNamespace="http://xmlapi.alcatel.com/messaging", ResponseNamespace="http://xmlapi.alcatel.com/messaging")]
        [return: System.Xml.Serialization.SoapElementAttribute("stopReturn")]
        public IMResult stop(string pFwSessionId, string pSvcSessionId) {
            object[] results = this.Invoke("stop", new object[] {
                        pFwSessionId,
                        pSvcSessionId});
            return ((IMResult)(results[0]));
        }
        
        /// <remarks/>
        public void stopAsync(string pFwSessionId, string pSvcSessionId) {
            this.stopAsync(pFwSessionId, pSvcSessionId, null);
        }
        
        /// <remarks/>
        public void stopAsync(string pFwSessionId, string pSvcSessionId, object userState) {
            if ((this.stopOperationCompleted == null)) {
                this.stopOperationCompleted = new System.Threading.SendOrPostCallback(this.OnstopOperationCompleted);
            }
            this.InvokeAsync("stop", new object[] {
                        pFwSessionId,
                        pSvcSessionId}, this.stopOperationCompleted, userState);
        }
        
        private void OnstopOperationCompleted(object arg) {
            if ((this.stopCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.stopCompleted(this, new stopCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("setFilter", RequestNamespace="http://xmlapi.alcatel.com/messaging", ResponseNamespace="http://xmlapi.alcatel.com/messaging")]
        public void setFilter(string pFwSessionId, string pSvcSessionId, IMMsgType[] pFilters) {
            this.Invoke("setFilter", new object[] {
                        pFwSessionId,
                        pSvcSessionId,
                        pFilters});
        }
        
        /// <remarks/>
        public void setFilterAsync(string pFwSessionId, string pSvcSessionId, IMMsgType[] pFilters) {
            this.setFilterAsync(pFwSessionId, pSvcSessionId, pFilters, null);
        }
        
        /// <remarks/>
        public void setFilterAsync(string pFwSessionId, string pSvcSessionId, IMMsgType[] pFilters, object userState) {
            if ((this.setFilterOperationCompleted == null)) {
                this.setFilterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetFilterOperationCompleted);
            }
            this.InvokeAsync("setFilter", new object[] {
                        pFwSessionId,
                        pSvcSessionId,
                        pFilters}, this.setFilterOperationCompleted, userState);
        }
        
        private void OnsetFilterOperationCompleted(object arg) {
            if ((this.setFilterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setFilterCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("getCapabilities", RequestNamespace="http://xmlapi.alcatel.com/messaging", ResponseNamespace="http://xmlapi.alcatel.com/messaging")]
        [return: System.Xml.Serialization.SoapElementAttribute("getCapabilitiesReturn")]
        public IMCapabilities getCapabilities(string pFwSessionId, string pSvcSessionId) {
            object[] results = this.Invoke("getCapabilities", new object[] {
                        pFwSessionId,
                        pSvcSessionId});
            return ((IMCapabilities)(results[0]));
        }
        
        /// <remarks/>
        public void getCapabilitiesAsync(string pFwSessionId, string pSvcSessionId) {
            this.getCapabilitiesAsync(pFwSessionId, pSvcSessionId, null);
        }
        
        /// <remarks/>
        public void getCapabilitiesAsync(string pFwSessionId, string pSvcSessionId, object userState) {
            if ((this.getCapabilitiesOperationCompleted == null)) {
                this.getCapabilitiesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetCapabilitiesOperationCompleted);
            }
            this.InvokeAsync("getCapabilities", new object[] {
                        pFwSessionId,
                        pSvcSessionId}, this.getCapabilitiesOperationCompleted, userState);
        }
        
        private void OngetCapabilitiesOperationCompleted(object arg) {
            if ((this.getCapabilitiesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getCapabilitiesCompleted(this, new getCapabilitiesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("cancel", RequestNamespace="http://xmlapi.alcatel.com/messaging", ResponseNamespace="http://xmlapi.alcatel.com/messaging")]
        [return: System.Xml.Serialization.SoapElementAttribute("cancelReturn")]
        public IMResult cancel(string pFwSessionId, string pSvcSessionId) {
            object[] results = this.Invoke("cancel", new object[] {
                        pFwSessionId,
                        pSvcSessionId});
            return ((IMResult)(results[0]));
        }
        
        /// <remarks/>
        public void cancelAsync(string pFwSessionId, string pSvcSessionId) {
            this.cancelAsync(pFwSessionId, pSvcSessionId, null);
        }
        
        /// <remarks/>
        public void cancelAsync(string pFwSessionId, string pSvcSessionId, object userState) {
            if ((this.cancelOperationCompleted == null)) {
                this.cancelOperationCompleted = new System.Threading.SendOrPostCallback(this.OncancelOperationCompleted);
            }
            this.InvokeAsync("cancel", new object[] {
                        pFwSessionId,
                        pSvcSessionId}, this.cancelOperationCompleted, userState);
        }
        
        private void OncancelOperationCompleted(object arg) {
            if ((this.cancelCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.cancelCompleted(this, new cancelCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("getIndexOf", RequestNamespace="http://xmlapi.alcatel.com/messaging", ResponseNamespace="http://xmlapi.alcatel.com/messaging")]
        [return: System.Xml.Serialization.SoapElementAttribute("getIndexOfReturn")]
        public int getIndexOf(string pFwSessionId, string pSvcSessionId, string pMessageId) {
            object[] results = this.Invoke("getIndexOf", new object[] {
                        pFwSessionId,
                        pSvcSessionId,
                        pMessageId});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void getIndexOfAsync(string pFwSessionId, string pSvcSessionId, string pMessageId) {
            this.getIndexOfAsync(pFwSessionId, pSvcSessionId, pMessageId, null);
        }
        
        /// <remarks/>
        public void getIndexOfAsync(string pFwSessionId, string pSvcSessionId, string pMessageId, object userState) {
            if ((this.getIndexOfOperationCompleted == null)) {
                this.getIndexOfOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetIndexOfOperationCompleted);
            }
            this.InvokeAsync("getIndexOf", new object[] {
                        pFwSessionId,
                        pSvcSessionId,
                        pMessageId}, this.getIndexOfOperationCompleted, userState);
        }
        
        private void OngetIndexOfOperationCompleted(object arg) {
            if ((this.getIndexOfCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getIndexOfCompleted(this, new getIndexOfCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("abort", RequestNamespace="http://xmlapi.alcatel.com/messaging", ResponseNamespace="http://xmlapi.alcatel.com/messaging")]
        public void abort(string pFwSessionId, string pSvcSessionId) {
            this.Invoke("abort", new object[] {
                        pFwSessionId,
                        pSvcSessionId});
        }
        
        /// <remarks/>
        public void abortAsync(string pFwSessionId, string pSvcSessionId) {
            this.abortAsync(pFwSessionId, pSvcSessionId, null);
        }
        
        /// <remarks/>
        public void abortAsync(string pFwSessionId, string pSvcSessionId, object userState) {
            if ((this.abortOperationCompleted == null)) {
                this.abortOperationCompleted = new System.Threading.SendOrPostCallback(this.OnabortOperationCompleted);
            }
            this.InvokeAsync("abort", new object[] {
                        pFwSessionId,
                        pSvcSessionId}, this.abortOperationCompleted, userState);
        }
        
        private void OnabortOperationCompleted(object arg) {
            if ((this.abortCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.abortCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("getStatus", RequestNamespace="http://xmlapi.alcatel.com/messaging", ResponseNamespace="http://xmlapi.alcatel.com/messaging")]
        [return: System.Xml.Serialization.SoapElementAttribute("getStatusReturn")]
        public IMResult getStatus(string pFwSessionId, string pSvcSessionId) {
            object[] results = this.Invoke("getStatus", new object[] {
                        pFwSessionId,
                        pSvcSessionId});
            return ((IMResult)(results[0]));
        }
        
        /// <remarks/>
        public void getStatusAsync(string pFwSessionId, string pSvcSessionId) {
            this.getStatusAsync(pFwSessionId, pSvcSessionId, null);
        }
        
        /// <remarks/>
        public void getStatusAsync(string pFwSessionId, string pSvcSessionId, object userState) {
            if ((this.getStatusOperationCompleted == null)) {
                this.getStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetStatusOperationCompleted);
            }
            this.InvokeAsync("getStatus", new object[] {
                        pFwSessionId,
                        pSvcSessionId}, this.getStatusOperationCompleted, userState);
        }
        
        private void OngetStatusOperationCompleted(object arg) {
            if ((this.getStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getStatusCompleted(this, new getStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("callback", RequestNamespace="http://xmlapi.alcatel.com/messaging", ResponseNamespace="http://xmlapi.alcatel.com/messaging")]
        [return: System.Xml.Serialization.SoapElementAttribute("callbackReturn")]
        public IMResult callback(string pFwSessionId, string pSvcSessionId, string pPhoneNumber, string pMessageId, bool pBlocking) {
            object[] results = this.Invoke("callback", new object[] {
                        pFwSessionId,
                        pSvcSessionId,
                        pPhoneNumber,
                        pMessageId,
                        pBlocking});
            return ((IMResult)(results[0]));
        }
        
        /// <remarks/>
        public void callbackAsync(string pFwSessionId, string pSvcSessionId, string pPhoneNumber, string pMessageId, bool pBlocking) {
            this.callbackAsync(pFwSessionId, pSvcSessionId, pPhoneNumber, pMessageId, pBlocking, null);
        }
        
        /// <remarks/>
        public void callbackAsync(string pFwSessionId, string pSvcSessionId, string pPhoneNumber, string pMessageId, bool pBlocking, object userState) {
            if ((this.callbackOperationCompleted == null)) {
                this.callbackOperationCompleted = new System.Threading.SendOrPostCallback(this.OncallbackOperationCompleted);
            }
            this.InvokeAsync("callback", new object[] {
                        pFwSessionId,
                        pSvcSessionId,
                        pPhoneNumber,
                        pMessageId,
                        pBlocking}, this.callbackOperationCompleted, userState);
        }
        
        private void OncallbackOperationCompleted(object arg) {
            if ((this.callbackCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.callbackCompleted(this, new callbackCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("play", RequestNamespace="http://xmlapi.alcatel.com/messaging", ResponseNamespace="http://xmlapi.alcatel.com/messaging")]
        [return: System.Xml.Serialization.SoapElementAttribute("playReturn")]
        public IMPlayResult play(string pFwSessionId, string pSvcSessionId, string pPhoneNumber, string pMessageId, string pOffset) {
            object[] results = this.Invoke("play", new object[] {
                        pFwSessionId,
                        pSvcSessionId,
                        pPhoneNumber,
                        pMessageId,
                        pOffset});
            return ((IMPlayResult)(results[0]));
        }
        
        /// <remarks/>
        public void playAsync(string pFwSessionId, string pSvcSessionId, string pPhoneNumber, string pMessageId, string pOffset) {
            this.playAsync(pFwSessionId, pSvcSessionId, pPhoneNumber, pMessageId, pOffset, null);
        }
        
        /// <remarks/>
        public void playAsync(string pFwSessionId, string pSvcSessionId, string pPhoneNumber, string pMessageId, string pOffset, object userState) {
            if ((this.playOperationCompleted == null)) {
                this.playOperationCompleted = new System.Threading.SendOrPostCallback(this.OnplayOperationCompleted);
            }
            this.InvokeAsync("play", new object[] {
                        pFwSessionId,
                        pSvcSessionId,
                        pPhoneNumber,
                        pMessageId,
                        pOffset}, this.playOperationCompleted, userState);
        }
        
        private void OnplayOperationCompleted(object arg) {
            if ((this.playCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.playCompleted(this, new playCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("send", RequestNamespace="http://xmlapi.alcatel.com/messaging", ResponseNamespace="http://xmlapi.alcatel.com/messaging")]
        [return: System.Xml.Serialization.SoapElementAttribute("sendReturn")]
        public IMSendResult send(string pFwSessionId, string pSvcSessionId, IMDestination[] pDestinations, IMSendHeaders pHeaders) {
            object[] results = this.Invoke("send", new object[] {
                        pFwSessionId,
                        pSvcSessionId,
                        pDestinations,
                        pHeaders});
            return ((IMSendResult)(results[0]));
        }
        
        /// <remarks/>
        public void sendAsync(string pFwSessionId, string pSvcSessionId, IMDestination[] pDestinations, IMSendHeaders pHeaders) {
            this.sendAsync(pFwSessionId, pSvcSessionId, pDestinations, pHeaders, null);
        }
        
        /// <remarks/>
        public void sendAsync(string pFwSessionId, string pSvcSessionId, IMDestination[] pDestinations, IMSendHeaders pHeaders, object userState) {
            if ((this.sendOperationCompleted == null)) {
                this.sendOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsendOperationCompleted);
            }
            this.InvokeAsync("send", new object[] {
                        pFwSessionId,
                        pSvcSessionId,
                        pDestinations,
                        pHeaders}, this.sendOperationCompleted, userState);
        }
        
        private void OnsendOperationCompleted(object arg) {
            if ((this.sendCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.sendCompleted(this, new sendCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <comentarios/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18060")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://xmlapi.alcatel.com/messaging/types")]
    public partial class AlcSessionResult : IMResult {
        
        private string sessionIdField;
        
        /// <comentarios/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string sessionId {
            get {
                return this.sessionIdField;
            }
            set {
                this.sessionIdField = value;
            }
        }
    }
    
    /// <comentarios/>
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(IMPauseResult))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(IMGetResult))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(IMSendResult))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(IMPlayResult))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(AlcSessionResult))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18060")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://xmlapi.alcatel.com/messaging/types")]
    public partial class IMResult {
        
        private IMCommands commandsField;
        
        private System.Nullable<IMState> stateField;
        
        /// <comentarios/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public IMCommands commands {
            get {
                return this.commandsField;
            }
            set {
                this.commandsField = value;
            }
        }
        
        /// <comentarios/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public System.Nullable<IMState> state {
            get {
                return this.stateField;
            }
            set {
                this.stateField = value;
            }
        }
    }
    
    /// <comentarios/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18060")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://xmlapi.alcatel.com/messaging/types")]
    public partial class IMCommands {
        
        private bool abortField;
        
        private bool appendField;
        
        private bool callbackField;
        
        private bool cancelField;
        
        private bool dialField;
        
        private bool forwardField;
        
        private bool getDraftField;
        
        private bool hangupField;
        
        private bool loginField;
        
        private bool logoutField;
        
        private bool pauseField;
        
        private bool playField;
        
        private bool recordField;
        
        private bool sendField;
        
        private bool stopField;
        
        /// <comentarios/>
        public bool abort {
            get {
                return this.abortField;
            }
            set {
                this.abortField = value;
            }
        }
        
        /// <comentarios/>
        public bool append {
            get {
                return this.appendField;
            }
            set {
                this.appendField = value;
            }
        }
        
        /// <comentarios/>
        public bool callback {
            get {
                return this.callbackField;
            }
            set {
                this.callbackField = value;
            }
        }
        
        /// <comentarios/>
        public bool cancel {
            get {
                return this.cancelField;
            }
            set {
                this.cancelField = value;
            }
        }
        
        /// <comentarios/>
        public bool dial {
            get {
                return this.dialField;
            }
            set {
                this.dialField = value;
            }
        }
        
        /// <comentarios/>
        public bool forward {
            get {
                return this.forwardField;
            }
            set {
                this.forwardField = value;
            }
        }
        
        /// <comentarios/>
        public bool getDraft {
            get {
                return this.getDraftField;
            }
            set {
                this.getDraftField = value;
            }
        }
        
        /// <comentarios/>
        public bool hangup {
            get {
                return this.hangupField;
            }
            set {
                this.hangupField = value;
            }
        }
        
        /// <comentarios/>
        public bool login {
            get {
                return this.loginField;
            }
            set {
                this.loginField = value;
            }
        }
        
        /// <comentarios/>
        public bool logout {
            get {
                return this.logoutField;
            }
            set {
                this.logoutField = value;
            }
        }
        
        /// <comentarios/>
        public bool pause {
            get {
                return this.pauseField;
            }
            set {
                this.pauseField = value;
            }
        }
        
        /// <comentarios/>
        public bool play {
            get {
                return this.playField;
            }
            set {
                this.playField = value;
            }
        }
        
        /// <comentarios/>
        public bool record {
            get {
                return this.recordField;
            }
            set {
                this.recordField = value;
            }
        }
        
        /// <comentarios/>
        public bool send {
            get {
                return this.sendField;
            }
            set {
                this.sendField = value;
            }
        }
        
        /// <comentarios/>
        public bool stop {
            get {
                return this.stopField;
            }
            set {
                this.stopField = value;
            }
        }
    }
    
    /// <comentarios/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18060")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://xmlapi.alcatel.com/messaging/types")]
    public partial class IMSendHeaders {
        
        private System.Nullable<IMMsgPriority> priorityField;
        
        private bool readReceiptField;
        
        private System.Nullable<IMMsgSensitivity> sensitivityField;
        
        private string subjectField;
        
        /// <comentarios/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public System.Nullable<IMMsgPriority> priority {
            get {
                return this.priorityField;
            }
            set {
                this.priorityField = value;
            }
        }
        
        /// <comentarios/>
        public bool readReceipt {
            get {
                return this.readReceiptField;
            }
            set {
                this.readReceiptField = value;
            }
        }
        
        /// <comentarios/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public System.Nullable<IMMsgSensitivity> sensitivity {
            get {
                return this.sensitivityField;
            }
            set {
                this.sensitivityField = value;
            }
        }
        
        /// <comentarios/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string subject {
            get {
                return this.subjectField;
            }
            set {
                this.subjectField = value;
            }
        }
    }
    
    /// <comentarios/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18060")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://xmlapi.alcatel.com/messaging/types")]
    public enum IMMsgPriority {
        
        /// <comentarios/>
        LOW,
        
        /// <comentarios/>
        NORMAL,
        
        /// <comentarios/>
        HIGH,
    }
    
    /// <comentarios/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18060")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://xmlapi.alcatel.com/messaging/types")]
    public enum IMMsgSensitivity {
        
        /// <comentarios/>
        PUBLIC,
        
        /// <comentarios/>
        ORGANIZATION,
        
        /// <comentarios/>
        PRIVATE,
    }
    
    /// <comentarios/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18060")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://xmlapi.alcatel.com/messaging/types")]
    public partial class IMDestination {
        
        private string emailAddressField;
        
        private string keyField;
        
        private string mailboxNumberField;
        
        private string vpimAddressField;
        
        /// <comentarios/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string emailAddress {
            get {
                return this.emailAddressField;
            }
            set {
                this.emailAddressField = value;
            }
        }
        
        /// <comentarios/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string key {
            get {
                return this.keyField;
            }
            set {
                this.keyField = value;
            }
        }
        
        /// <comentarios/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string mailboxNumber {
            get {
                return this.mailboxNumberField;
            }
            set {
                this.mailboxNumberField = value;
            }
        }
        
        /// <comentarios/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string vpimAddress {
            get {
                return this.vpimAddressField;
            }
            set {
                this.vpimAddressField = value;
            }
        }
    }
    
    /// <comentarios/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18060")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://xmlapi.alcatel.com/messaging/types")]
    public partial class IMCapabilities {
        
        private bool appendField;
        
        private bool callBackField;
        
        private bool callBackInterruptibleField;
        
        private bool deleteField;
        
        private bool dialInterruptibleField;
        
        private bool eventsField;
        
        private bool forwardField;
        
        private bool getField;
        
        private bool getDraftField;
        
        private bool hangupField;
        
        private bool listField;
        
        private bool msgEmailField;
        
        private bool msgFaxField;
        
        private bool msgNotificationsField;
        
        private bool msgVoiceField;
        
        private bool nomadicField;
        
        private bool nonBlockingCallBackField;
        
        private bool nonBlockingDialField;
        
        private bool pauseField;
        
        private bool playField;
        
        private bool playOffsetAbsoluteField;
        
        private bool playOffsetRelativeField;
        
        private bool recordField;
        
        private bool recordInterruptibleField;
        
        private bool sendByEmailField;
        
        private bool sendByMailboxNumberField;
        
        private bool sendByVpimAddressField;
        
        /// <comentarios/>
        public bool append {
            get {
                return this.appendField;
            }
            set {
                this.appendField = value;
            }
        }
        
        /// <comentarios/>
        public bool callBack {
            get {
                return this.callBackField;
            }
            set {
                this.callBackField = value;
            }
        }
        
        /// <comentarios/>
        public bool callBackInterruptible {
            get {
                return this.callBackInterruptibleField;
            }
            set {
                this.callBackInterruptibleField = value;
            }
        }
        
        /// <comentarios/>
        public bool delete {
            get {
                return this.deleteField;
            }
            set {
                this.deleteField = value;
            }
        }
        
        /// <comentarios/>
        public bool dialInterruptible {
            get {
                return this.dialInterruptibleField;
            }
            set {
                this.dialInterruptibleField = value;
            }
        }
        
        /// <comentarios/>
        public bool events {
            get {
                return this.eventsField;
            }
            set {
                this.eventsField = value;
            }
        }
        
        /// <comentarios/>
        public bool forward {
            get {
                return this.forwardField;
            }
            set {
                this.forwardField = value;
            }
        }
        
        /// <comentarios/>
        public bool get {
            get {
                return this.getField;
            }
            set {
                this.getField = value;
            }
        }
        
        /// <comentarios/>
        public bool getDraft {
            get {
                return this.getDraftField;
            }
            set {
                this.getDraftField = value;
            }
        }
        
        /// <comentarios/>
        public bool hangup {
            get {
                return this.hangupField;
            }
            set {
                this.hangupField = value;
            }
        }
        
        /// <comentarios/>
        public bool list {
            get {
                return this.listField;
            }
            set {
                this.listField = value;
            }
        }
        
        /// <comentarios/>
        public bool msgEmail {
            get {
                return this.msgEmailField;
            }
            set {
                this.msgEmailField = value;
            }
        }
        
        /// <comentarios/>
        public bool msgFax {
            get {
                return this.msgFaxField;
            }
            set {
                this.msgFaxField = value;
            }
        }
        
        /// <comentarios/>
        public bool msgNotifications {
            get {
                return this.msgNotificationsField;
            }
            set {
                this.msgNotificationsField = value;
            }
        }
        
        /// <comentarios/>
        public bool msgVoice {
            get {
                return this.msgVoiceField;
            }
            set {
                this.msgVoiceField = value;
            }
        }
        
        /// <comentarios/>
        public bool nomadic {
            get {
                return this.nomadicField;
            }
            set {
                this.nomadicField = value;
            }
        }
        
        /// <comentarios/>
        public bool nonBlockingCallBack {
            get {
                return this.nonBlockingCallBackField;
            }
            set {
                this.nonBlockingCallBackField = value;
            }
        }
        
        /// <comentarios/>
        public bool nonBlockingDial {
            get {
                return this.nonBlockingDialField;
            }
            set {
                this.nonBlockingDialField = value;
            }
        }
        
        /// <comentarios/>
        public bool pause {
            get {
                return this.pauseField;
            }
            set {
                this.pauseField = value;
            }
        }
        
        /// <comentarios/>
        public bool play {
            get {
                return this.playField;
            }
            set {
                this.playField = value;
            }
        }
        
        /// <comentarios/>
        public bool playOffsetAbsolute {
            get {
                return this.playOffsetAbsoluteField;
            }
            set {
                this.playOffsetAbsoluteField = value;
            }
        }
        
        /// <comentarios/>
        public bool playOffsetRelative {
            get {
                return this.playOffsetRelativeField;
            }
            set {
                this.playOffsetRelativeField = value;
            }
        }
        
        /// <comentarios/>
        public bool record {
            get {
                return this.recordField;
            }
            set {
                this.recordField = value;
            }
        }
        
        /// <comentarios/>
        public bool recordInterruptible {
            get {
                return this.recordInterruptibleField;
            }
            set {
                this.recordInterruptibleField = value;
            }
        }
        
        /// <comentarios/>
        public bool sendByEmail {
            get {
                return this.sendByEmailField;
            }
            set {
                this.sendByEmailField = value;
            }
        }
        
        /// <comentarios/>
        public bool sendByMailboxNumber {
            get {
                return this.sendByMailboxNumberField;
            }
            set {
                this.sendByMailboxNumberField = value;
            }
        }
        
        /// <comentarios/>
        public bool sendByVpimAddress {
            get {
                return this.sendByVpimAddressField;
            }
            set {
                this.sendByVpimAddressField = value;
            }
        }
    }
    
    /// <comentarios/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18060")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://xmlapi.alcatel.com/messaging/types")]
    public partial class IMMsgHeader {
        
        private bool callableField;
        
        private System.Nullable<System.DateTime> dateField;
        
        private System.Nullable<System.DateTime> expirationField;
        
        private bool forwardableField;
        
        private string fromField;
        
        private int lengthField;
        
        private string msgIdField;
        
        private string nameField;
        
        private System.Nullable<IMMsgPriority> priorityField;
        
        private bool replyAllowedField;
        
        private System.Nullable<IMMsgSensitivity> sensitivityField;
        
        private string subjectField;
        
        private System.Nullable<IMMsgType> typeField;
        
        private bool unReadField;
        
        /// <comentarios/>
        public bool callable {
            get {
                return this.callableField;
            }
            set {
                this.callableField = value;
            }
        }
        
        /// <comentarios/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> date {
            get {
                return this.dateField;
            }
            set {
                this.dateField = value;
            }
        }
        
        /// <comentarios/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> expiration {
            get {
                return this.expirationField;
            }
            set {
                this.expirationField = value;
            }
        }
        
        /// <comentarios/>
        public bool forwardable {
            get {
                return this.forwardableField;
            }
            set {
                this.forwardableField = value;
            }
        }
        
        /// <comentarios/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string from {
            get {
                return this.fromField;
            }
            set {
                this.fromField = value;
            }
        }
        
        /// <comentarios/>
        public int length {
            get {
                return this.lengthField;
            }
            set {
                this.lengthField = value;
            }
        }
        
        /// <comentarios/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string msgId {
            get {
                return this.msgIdField;
            }
            set {
                this.msgIdField = value;
            }
        }
        
        /// <comentarios/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <comentarios/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public System.Nullable<IMMsgPriority> priority {
            get {
                return this.priorityField;
            }
            set {
                this.priorityField = value;
            }
        }
        
        /// <comentarios/>
        public bool replyAllowed {
            get {
                return this.replyAllowedField;
            }
            set {
                this.replyAllowedField = value;
            }
        }
        
        /// <comentarios/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public System.Nullable<IMMsgSensitivity> sensitivity {
            get {
                return this.sensitivityField;
            }
            set {
                this.sensitivityField = value;
            }
        }
        
        /// <comentarios/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string subject {
            get {
                return this.subjectField;
            }
            set {
                this.subjectField = value;
            }
        }
        
        /// <comentarios/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public System.Nullable<IMMsgType> type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <comentarios/>
        public bool unRead {
            get {
                return this.unReadField;
            }
            set {
                this.unReadField = value;
            }
        }
    }
    
    /// <comentarios/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18060")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://xmlapi.alcatel.com/messaging/types")]
    public enum IMMsgType {
        
        /// <comentarios/>
        VOICE,
        
        /// <comentarios/>
        FAX,
        
        /// <comentarios/>
        EMAIL,
    }
    
    /// <comentarios/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18060")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://xmlapi.alcatel.com/messaging/types")]
    public partial class IMMsgSortingField {
        
        private bool ascendField;
        
        private System.Nullable<IMMsgField> fieldField;
        
        /// <comentarios/>
        public bool ascend {
            get {
                return this.ascendField;
            }
            set {
                this.ascendField = value;
            }
        }
        
        /// <comentarios/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public System.Nullable<IMMsgField> field {
            get {
                return this.fieldField;
            }
            set {
                this.fieldField = value;
            }
        }
    }
    
    /// <comentarios/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18060")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://xmlapi.alcatel.com/messaging/types")]
    public enum IMMsgField {
        
        /// <comentarios/>
        MSGID,
        
        /// <comentarios/>
        TYPE,
        
        /// <comentarios/>
        DATE,
        
        /// <comentarios/>
        FROM,
        
        /// <comentarios/>
        NAME,
        
        /// <comentarios/>
        SUBJECT,
        
        /// <comentarios/>
        UNREAD,
        
        /// <comentarios/>
        PRIORITY,
        
        /// <comentarios/>
        REPLYALLOWED,
        
        /// <comentarios/>
        LENGTH,
        
        /// <comentarios/>
        SENSITIVITY,
        
        /// <comentarios/>
        FORWARDABLE,
        
        /// <comentarios/>
        CALLABLE,
        
        /// <comentarios/>
        EXPIRATION,
    }
    
    /// <comentarios/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18060")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://xmlapi.alcatel.com/messaging/types")]
    public partial class IMMsgCounters {
        
        private int newEmailField;
        
        private int newFaxField;
        
        private int newVoiceField;
        
        private int totalEmailField;
        
        private int totalFaxField;
        
        private int totalVoiceField;
        
        /// <comentarios/>
        public int newEmail {
            get {
                return this.newEmailField;
            }
            set {
                this.newEmailField = value;
            }
        }
        
        /// <comentarios/>
        public int newFax {
            get {
                return this.newFaxField;
            }
            set {
                this.newFaxField = value;
            }
        }
        
        /// <comentarios/>
        public int newVoice {
            get {
                return this.newVoiceField;
            }
            set {
                this.newVoiceField = value;
            }
        }
        
        /// <comentarios/>
        public int totalEmail {
            get {
                return this.totalEmailField;
            }
            set {
                this.totalEmailField = value;
            }
        }
        
        /// <comentarios/>
        public int totalFax {
            get {
                return this.totalFaxField;
            }
            set {
                this.totalFaxField = value;
            }
        }
        
        /// <comentarios/>
        public int totalVoice {
            get {
                return this.totalVoiceField;
            }
            set {
                this.totalVoiceField = value;
            }
        }
    }
    
    /// <comentarios/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18060")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://xmlapi.alcatel.com/messaging/types")]
    public partial class IMSendResultItem {
        
        private System.Nullable<IMSendResultCause> causeField;
        
        private string keyField;
        
        /// <comentarios/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public System.Nullable<IMSendResultCause> cause {
            get {
                return this.causeField;
            }
            set {
                this.causeField = value;
            }
        }
        
        /// <comentarios/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string key {
            get {
                return this.keyField;
            }
            set {
                this.keyField = value;
            }
        }
    }
    
    /// <comentarios/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18060")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://xmlapi.alcatel.com/messaging/types")]
    public enum IMSendResultCause {
        
        /// <comentarios/>
        DND,
        
        /// <comentarios/>
        FULL,
        
        /// <comentarios/>
        UNKNOWN,
        
        /// <comentarios/>
        SMTP,
        
        /// <comentarios/>
        DUPLICATE,
        
        /// <comentarios/>
        PARTIAL,
        
        /// <comentarios/>
        OTHER,
    }
    
    /// <comentarios/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18060")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://xmlapi.alcatel.com/messaging/types")]
    public enum IMState {
        
        /// <comentarios/>
        UNLOGGED,
        
        /// <comentarios/>
        LOGGED,
        
        /// <comentarios/>
        DIAL,
        
        /// <comentarios/>
        SESSION,
        
        /// <comentarios/>
        PLAY,
        
        /// <comentarios/>
        PLAY_PAUSED,
        
        /// <comentarios/>
        CALLBACK,
        
        /// <comentarios/>
        RECORD,
        
        /// <comentarios/>
        RECORD_IDLE,
        
        /// <comentarios/>
        PLAYREC,
        
        /// <comentarios/>
        PLAYREC_PAUSED,
    }
    
    /// <comentarios/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18060")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://xmlapi.alcatel.com/messaging/types")]
    public partial class IMPauseResult : IMResult {
        
        private int positionField;
        
        /// <comentarios/>
        public int position {
            get {
                return this.positionField;
            }
            set {
                this.positionField = value;
            }
        }
    }
    
    /// <comentarios/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18060")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://xmlapi.alcatel.com/messaging/types")]
    public partial class IMGetResult : IMResult {
        
        private string[] urlsField;
        
        /// <comentarios/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string[] urls {
            get {
                return this.urlsField;
            }
            set {
                this.urlsField = value;
            }
        }
    }
    
    /// <comentarios/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18060")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://xmlapi.alcatel.com/messaging/types")]
    public partial class IMSendResult : IMResult {
        
        private IMSendResultItem[] destinationsField;
        
        private IMSendResultItem[] embeddedDestinationsField;
        
        /// <comentarios/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public IMSendResultItem[] destinations {
            get {
                return this.destinationsField;
            }
            set {
                this.destinationsField = value;
            }
        }
        
        /// <comentarios/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public IMSendResultItem[] embeddedDestinations {
            get {
                return this.embeddedDestinationsField;
            }
            set {
                this.embeddedDestinationsField = value;
            }
        }
    }
    
    /// <comentarios/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18060")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://xmlapi.alcatel.com/messaging/types")]
    public partial class IMPlayResult : IMResult {
        
        private int positionField;
        
        /// <comentarios/>
        public int position {
            get {
                return this.positionField;
            }
            set {
                this.positionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void loginCompletedEventHandler(object sender, loginCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class loginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal loginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AlcSessionResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AlcSessionResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void logoutCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void dialCompletedEventHandler(object sender, dialCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class dialCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal dialCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public IMResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((IMResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void pauseCompletedEventHandler(object sender, pauseCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class pauseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal pauseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public IMPauseResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((IMPauseResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void recordCompletedEventHandler(object sender, recordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class recordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal recordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public IMResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((IMResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void forwardCompletedEventHandler(object sender, forwardCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class forwardCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal forwardCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public IMResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((IMResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void hangupCompletedEventHandler(object sender, hangupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class hangupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal hangupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public IMResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((IMResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void loadMessagesCompletedEventHandler(object sender, loadMessagesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class loadMessagesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal loadMessagesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public IMMsgCounters Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((IMMsgCounters)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void getCountersCompletedEventHandler(object sender, getCountersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getCountersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getCountersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public IMMsgCounters Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((IMMsgCounters)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void setOrderCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void getMessagesCompletedEventHandler(object sender, getMessagesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getMessagesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getMessagesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public IMMsgHeader[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((IMMsgHeader[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void deleteMessagesCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void deleteAllMessagesCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void getMessageUrlCompletedEventHandler(object sender, getMessageUrlCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getMessageUrlCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getMessageUrlCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void getDraftUrlCompletedEventHandler(object sender, getDraftUrlCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getDraftUrlCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getDraftUrlCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public IMGetResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((IMGetResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void appendCompletedEventHandler(object sender, appendCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class appendCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal appendCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public IMResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((IMResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void stopCompletedEventHandler(object sender, stopCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class stopCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal stopCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public IMResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((IMResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void setFilterCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void getCapabilitiesCompletedEventHandler(object sender, getCapabilitiesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getCapabilitiesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getCapabilitiesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public IMCapabilities Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((IMCapabilities)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void cancelCompletedEventHandler(object sender, cancelCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class cancelCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal cancelCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public IMResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((IMResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void getIndexOfCompletedEventHandler(object sender, getIndexOfCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getIndexOfCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getIndexOfCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void abortCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void getStatusCompletedEventHandler(object sender, getStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public IMResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((IMResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void callbackCompletedEventHandler(object sender, callbackCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class callbackCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal callbackCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public IMResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((IMResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void playCompletedEventHandler(object sender, playCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class playCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal playCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public IMPlayResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((IMPlayResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void sendCompletedEventHandler(object sender, sendCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class sendCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal sendCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public IMSendResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((IMSendResult)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591